import sys
import math
import numpy

timer = 0
thrust = 100
last_checkpoint_x = 0
last_checkpoint_y = 0

while True:

    x, y, next_checkpoint_x, next_checkpoint_y, next_checkpoint_dist, next_checkpoint_angle = [int(i) for i in input().split()]
    opponent_x, opponent_y = [int(i) for i in input().split()]
    #--------------------#  GATHER DATA  #--------------------#
    my_cord = numpy.array([x,y])
    checkpoint = numpy.array([next_checkpoint_x, next_checkpoint_y])
    
    
    
    if last_checkpoint_x==0:
        last_checkpoint_x = x
        last_checkpoint_y = y

    velocity = my_cord - numpy.array([last_checkpoint_x,last_checkpoint_y])

    if (numpy.linalg.norm(my_cord+velocity - checkpoint)<500 or numpy.linalg.norm(my_cord+velocity*1.9 - checkpoint)<500 or numpy.linalg.norm(my_cord+velocity*2.8 - checkpoint)<400) and abs(next_checkpoint_angle)<50:
        next_checkpoint_x=8000
        next_checkpoint_y=4500
    # print(distanse, file=sys.stderr)

    print(str(next_checkpoint_x - (x - last_checkpoint_x)*3) + " " + str(next_checkpoint_y - (y - last_checkpoint_y)*3) + (" 100" if abs(next_checkpoint_angle)<90 else " 0"))

    timer += 1
    last_checkpoint_x = x
    last_checkpoint_y = y